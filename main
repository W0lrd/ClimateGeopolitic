import random

# --------------------
# Card Definition
# --------------------
class Card:
    def __init__(self, name, count, cost, income, score, pollution):
        self.name = name
        self.count = count
        self.cost = cost
        self.income = income
        self.score = score
        self.pollution = pollution

    def __repr__(self):
        return f"{self.name} (Cost:{self.cost}, Income:{self.income}, Score:{self.score}, Pollution:{self.pollution})"

# --------------------
# Player Definition
# --------------------
class Player:
    def __init__(self, name, is_human=False, strategy="balanced"):
        self.name = name
        self.is_human = is_human
        self.strategy = strategy
        self.money = random.randint(12, 16)
        self.score = 0
        self.pollution = 0
        self.cards = []  # Owned infrastructure

    def buy_card(self, card):
        if self.money >= card.cost:
            self.cards.append(card)
            self.money -= card.cost
            return True
        return False

    def apply_income(self):
        income, score, pollution = 0, 0, 0
        for c in self.cards:
            income += c.income
            score += c.score
            pollution += c.pollution
        self.money += income
        self.score += score
        self.pollution += pollution
        return pollution

# --------------------
# Game Setup
# --------------------
cards_data = [
    ("Centrale à charbon", 3, 5, 5, 0, 5),
    ("Centrale à gaz", 3, 6, 4, 0, 4),
    ("Eoliennes", 3, 5, 1, 1, 0),
    ("Solaires", 3, 4, 1, 1, 0),
    ("Barrages hydroliques", 1, 6, 1, 1, 0),
    ("Centrale nucléaire", 2, 15, 4, 0, 1),
    ("Taxe carbone", 1, 30, 3, 5, -2),
    ("Transports durables", 2, 16, 0, 5, -1),
    ("Rénovation thermique", 1, 22, 1, 5, -2),
    ("Restauration environnement", 2, 18, 0, 5, -2),
    ("Economie circulaire", 1, 13, 2, 3, 0),
    ("Capture de carbone", 1, 10, 0, 3, -1),
    ("Industrie de pointe", 2, 17, 1, 3, 2),
    ("Agroécologie", 1, 12, 1, 2, 0),
    ("Permaculture", 1, 10, 0, 3, 0),
    ("Agroforesterie", 1, 16, 1, 4, 0),
]

deck = []
for name, count, cost, income, score, pollution in cards_data:
    for _ in range(count):
        deck.append(Card(name, count, cost, income, score, pollution))
random.shuffle(deck)

# --------------------
# AI Buying Strategy
# --------------------
def ai_choose_card(ai, options, global_pollution, player_pollution):
    affordable = [c for c in options if c.cost <= ai.money]
    if not affordable:
        return None

    if ai.strategy == "greedy":
        return max(affordable, key=lambda c: c.income)
    elif ai.strategy == "eco":
        return min(affordable, key=lambda c: c.pollution)
    elif ai.strategy == "balanced":
        return random.choice(affordable)
    elif ai.strategy == "reactive":
        if player_pollution > global_pollution / 2:
            return min(affordable, key=lambda c: c.pollution)
        else:
            return max(affordable, key=lambda c: c.income)
    return None

# --------------------
# Main Game Loop
# --------------------
def play_game():
    global_pollution = 0

    # Init players
    human = Player("You", is_human=True)
    ai1 = Player("AI Greedy", strategy="greedy")
    ai2 = Player("AI Eco", strategy="eco")
    ai3 = Player("AI Reactive", strategy="reactive")
    players = [human, ai1, ai2, ai3]

    turn = 1
    while global_pollution < 250 and deck:
        print(f"\n--- Turn {turn} ---")

        # Each player draws 2 cards (if available)
        for p in players:
            hand = random.sample(deck, min(2, len(deck)))
            for c in hand:
                deck.remove(c)

            if p.is_human:
                print("Your money:", p.money)
                print("Your hand:")
                for i, c in enumerate(hand):
                    print(f"  {i+1}. {c}")
                choice = input("Choose a card number to buy (or press Enter to skip): ")
                if choice.isdigit():
                    chosen = hand[int(choice)-1]
                    if not p.buy_card(chosen):
                        print("Not enough money!")
            else:
                chosen = ai_choose_card(p, hand, global_pollution, human.pollution)
                if chosen:
                    p.buy_card(chosen)

        # Apply incomes & pollution
        for p in players:
            global_pollution += p.apply_income()

        print("Global pollution:", global_pollution)
        turn += 1

    print("\n--- Game Over ---")
    for p in players:
        print(f"{p.name}: Score {p.score}, Money {p.money}, Pollution {p.pollution}")

if __name__ == "__main__":
    play_game()
